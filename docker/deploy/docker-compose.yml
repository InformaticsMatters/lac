# You must set various environment variables before running anything. 
# These variables define things like usernames and passwords that will be used and allows
# these to be easily set for different environments.
# The easiest way is to create a shell script containing the definitions and 'source' it.
# A template file is present called docker/deploy/setenv-default.sh
# Copy this to docker/deploy/setenv.sh and edit it accordingly.
# Then 'source' it: source setenv.sh
# DO NOT edit setenv-default.sh directly with confidential information like passwords as it's stored in Git.
# Instead copy it to setenv.sh, which is .gitignore'd.

################# Rabbit MQ container #############################################
#
# initialize:
# docker exec deploy_mq_1 bash init.sh
# admin console available on http://${PUBLIC_HOST}:15672/
#
rabbitmq:
    image: rabbitmq:3-management
    ports:
    - "15672:15672"
    volumes:
    - ../rabbitmq/init.sh:/usr/local/etc/init.sh:ro
    - ../rabbitmq/update-credentials.sh:/usr/local/etc/update-credentials.sh:ro
    - ../rabbitmq/clean.sh:/usr/local/etc/clean.sh:ro
    environment: 
        RABBITMQ_ERLANG_COOKIE:
        RABBITMQ_DEFAULT_USER: admin
        RABBITMQ_DEFAULT_PASS:
        RABBITMQ_SQUONK_PASS:

################# PostgreSQL container ############################################
# based on PostgreSQL 9.5 with RDKit cartridge support
#
postgres:
    image: informaticsmatters/rdkit_cartridge:Release_2016_03_1
    volumes:
    - ./images/postgres/init-postgres-db.sh:/docker-entrypoint-initdb.d/init-postgres-db.sh:ro
    - ./data/pgdata:/var/lib/postgresql/data
    environment:
        POSTGRES_PASSWORD:
        POSTGRES_KEYCLOAK_PASS:
        POSTGRES_XWIKI_PASS:
        POSTGRES_SQUONK_PASS:


################# swagger container ###############################################
#swagger:
#    image: sjeandeaux/docker-swagger-ui
#    ports:
#        - "8888:8888"
#    environment: 
#        API_URL: http://${PUBLIC_HOST}:8091/coreservices/api-docs

################# keycloak container ###############################################
# available on http://${PUBLIC_HOST}/auth
keycloak:
    build: images/
    dockerfile: Dockerfile-keycloak
    links:
    - postgres:postgres
    environment:
        POSTGRES_DATABASE: keycloak
        POSTGRES_USER: keycloak
        POSTGRES_PASSWORD:
    volumes:
    - ./images/keycloak/standalone.xml:/opt/jboss/keycloak/standalone/configuration/standalone.xml:ro
#    - ./images/keycloak/keycloak.jks:/opt/jboss/keycloak/standalone/configuration/keycloak.jks:ro


################# chem services container #########################################
# available on
# http://${PUBLIC_HOST}/chem-services-rdkit-basic/rest/v1/calculators
# http://${PUBLIC_HOST}/chem-services-cdk-basic/rest/v1/calculators
# http://${PUBLIC_HOST}/chem-services-chemaxon-basic/rest/v1/calculators
# http://${PUBLIC_HOST}/chem-services-chemaxon-basic/rest/v1/descriptors
# http://${PUBLIC_HOST}/chem-services-rdkit-search/rest/v1/db
# http://${PUBLIC_HOST}/chem-services-rdkit-search/rest/v1/db/search?table=emolecules_order_bb&limit=5&mode=sss&q=%5B%236%5D-1-%5B%236%5D-%5B%237%5D-%5B%236%5D-%5B%236%5D-%5B%237%5D-1
# http://${PUBLIC_HOST}/chem-services-rdkit-search/rest/v1/db/search?table=emolecules_order_bb&limit=5&mode=sim&q=CN1C%3DNC2%3DC1C(%3DO)N(C)C(%3DO)N2C"
#
# Test using something like this:
# curl -X POST -T mols.json "http://${PUBLIC_HOST}:8092/chem-services-cdk-basic/rest/v1/calculators/logp"
#
chemservices:
    image: squonk/chem-services-basic
    links:
    - postgres:postgres
    environment:
        SQUONK_DB_SERVER: postgres
        SQUONK_DB_USER:
        SQUONK_DB_PASS:

################# rdkit server services container ##################################
# test using:
# curl -X POST -T mols.json -H "Accept: application/json" -H "Content-Type: application/json" "http://localhost:8000/rdkit_cluster/cluster_simple?metric=tanimoto&threshold=0.7
#
rdkitserver:
    image: squonk/rdkitserver
    restart: always
    environment: 
        SECRET_KEY:
        C_FORCE_ROOT: "true"
    command: gunicorn --workers 3 --timeout 240 -b 0.0.0.0 proj.wsgi
    volumes:
    - /code/static

################# core-services-server container ###################################
# available on:
# http://${PUBLIC_HOST}/coreservices/rest/ping
# http://${PUBLIC_HOST}/coreservices/rest/v1/services
# http://${PUBLIC_HOST}/coreservices/rest/v1/jobs
# 
coreservices:
    image: squonk/core-services-server
    links:
    - postgres:postgres
    - rabbitmq:rabbitmq
    - chemservices:chemservices
    - rdkitserver:rdkitserver
    environment:
        RABBITMQ_HOST: rabbitmq
        RABBITMQ_SQUONK_PASS:
        SQUONK_DB_SERVER: postgres
        SQUONK_DB_USER:
        SQUONK_DB_PASS:
        SQUONK_SERVICES_CORE:
        SQUONK_BASIC_CHEM_SERVICES_URL: "http://chemservices:8080" # internal port
        SQUONK_RDKIT_CHEM_SERVICES_URL: "http://rdkitserver:8000"  # internal port

################# cell-executor container #########################################
cellexecutor:
    image: squonk/cellexecutor
    links:
    - coreservices:coreservices
    - rabbitmq:rabbitmq
    - chemservices:chemservices
    - portal:portal
    - rdkitserver:rdkitserver
    environment:
        RABBITMQ_HOST: rabbitmq
        RABBITMQ_SQUONK_PASS:
        SQUONK_SERVICES_CORE: http://coreservices:8080/coreservices/rest/v1
        SERVICE_CALLBACK: http://portal:8080/portal

################# portal ##########################################################
# available on http://${PUBLIC_HOST}/portal
portal:
    image: squonk/portal
    links:
    - postgres:postgres
    - coreservices:coreservices
    volumes:
    - ./images/portal/tomcat-users.xml:/usr/local/tomcat/conf/tomcat-users.xml:ro
    - ./images/portal/server.xml:/usr/local/tomcat/conf/server.xml:ro
    - ./images/portal/keycloak.json:/usr/local/tomcat/webapps/portal/WEB-INF/keycloak.json:ro
    - ./images/portal/context.xml:/usr/local/tomcat/webapps/portal/META-INF/context.xml:ro
    - ./images/portal/web.xml:/usr/local/tomcat/webapps/portal/WEB-INF/web.xml:ro
    - ./images/portal/beans.xml:/usr/local/tomcat/webapps/portal/WEB-INF/beans.xml:ro
    - ./images/portal/persistence.properties:/usr/local/tomcat/webapps/portal/WEB-INF/persistence.properties:ro
    environment:
        KEYCLOAK_SERVER_URL:
        PUBLIC_HOST_URL:
        SQUONK_SERVICES_CORE: http://coreservices:8080/coreservices/rest/v1
        SERVICE_CALLBACK: http://localhost:8080/portal

################# xwiki container ###################################################
# available on http://${PUBLIC_HOST}/xwiki
xwiki:
    build: images/
    dockerfile: Dockerfile-xwiki
    volumes:
    - ./data/xwiki:/var/local/xwiki
    links:
    - keycloak:keycloak
    - postgres:postgres
    environment:
    - KEYCLOAK_SERVER_URL

################# nginx container ###################################################
# create a SSL cert/key using:
# openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout images/nginx/cert.key -out images/nginx/cert.crt
nginx:
    image: nginx
    ports:
    - 80:80
    - 443:443
    volumes:
    - ./images/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    - ./images/nginx/cert.crt:/etc/nginx/cert.crt:ro
    - ./images/nginx/cert.key:/etc/nginx/cert.key:ro
    - ./images/nginx/index.html:/usr/share/nginx/html/index.html:ro
    links:
    - xwiki
    - keycloak
    - portal
    - coreservices
    - chemservices

