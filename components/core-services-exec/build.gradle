description = 'service execution utils'

apply plugin: 'groovy'


apply plugin: 'org.unbroken-dome.test-sets'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.2.0'
    }
}

dependencies {
    compile project(':common')
    compile project(':common-utils')
    compile project(':common-camel')

    compile project(':core-services-common')
    compile project(':core-services-client')

    compile 'com.github.docker-java:docker-java:3.0.5'

    compile "org.codehaus.groovy:groovy-all:$groovyVersion"

    compile "org.postgresql:postgresql:$postgresDriverVersion"

    testCompile "org.apache.camel:camel-jetty:$camelVersion"
}


/* Integration test setup is borrowed from here:
 * http://www.petrikainulainen.net/programming/gradle/getting-started-with-gradle-integration-testing-with-the-testsets-plugin/
 * */
testSets {
    integrationTest
}

//check.dependsOn integrationTest
integrationTest.mustRunAfter test

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

integrationTest {
    dependsOn rootProject.tasks.integrationTestEnvPrepareAndClean,
            tasks.getByPath(':database:flywayMigrate')
    finalizedBy rootProject.tasks.integrationTestEnvShutdown
}

project.integrationTest {
    outputs.upToDateWhen { false }
}
