description = 'Dataset services'
def contextName = 'coreservices'

apply plugin: 'groovy'
apply plugin: 'war'
apply plugin: 'com.bmuschko.tomcat'
apply plugin: 'docker'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.2'
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}


dependencies {
    
    compile project(':common')
    compile project(':chemaxon-lib')
    compile project(':core-services/core-services-common')
    
    compile "org.codehaus.groovy:groovy-all:$groovyVersion"
    
    providedCompile 'javax.servlet:servlet-api:2.5'

    compile "org.apache.camel:camel-core:$camelVersion"
    compile "org.apache.camel:camel-jackson:$camelVersion"
    compile "org.apache.camel:camel-servletlistener:$camelVersion"
    compile "org.apache.camel:camel-servlet:$camelVersion"
    compile "org.apache.camel:camel-swagger:$camelVersion"
    compile "org.apache.camel:camel-rabbitmq:$camelVersion"
     
    def tomcatVersion = '6.0.43'
    tomcat "org.apache.tomcat:catalina:${tomcatVersion}",
           "org.apache.tomcat:coyote:${tomcatVersion}",
           "org.apache.tomcat:jasper:${tomcatVersion}"
    
    compile "org.postgresql:postgresql:9.4-1201-jdbc41"
  
}

tomcat {
    enableSSL = true
    contextPath = contextName
    
    users {
        user {
            username = 'admin'
            password = 'lacrocks!'
            roles = ['developers', 'admin']
        }

        user {
            username = 'manager'
            password = 'lacrocks!'
            roles = ['manager']
        }
    }
}

docker {
    baseImage "tomcat:7-jre8"
    maintainer 'Tim Dudgeon'
}

/** Build a Docker image
 * run the generated image with something like this:
 * 
 * docker run -d --name core-services -p 80:8080 --link <name_of_postgres_db_container>:db --link <name_of_rabbitmq_container>:rabbitmq -v <host_dir>:/external <image id>
 * 
 * Note: the host directory <host_dir> containing the ChemAxon license file needs to be specified,
 * or some other mechanism used, probably by setting the value of the CHEMAXON_LICENSE_URL
 * environment variable using an -e option.
 * The following environment variables can be used to override the default settings:
 * CHEMCENTRAL_DB_SERVER, CHEMCENTRAL_DB_PORT, CHEMCENTRAL_DB_USERNAME, CHEMCENTRAL_DB_PASSWORD, CHEMAXON_LICENSE_URL
 */
task buildDocker(type: Docker, dependsOn: war) {
    applicationName = contextName
    
    setEnvironment("CHEMCENTRAL_DB_SERVER", "db") // assumes the db alias is used when linking. If not override with a -e argument
    setEnvironment("RABBITMQ_HOST", "rabbitmq")   // assumes the rabbitmq alias is used when linking. If not override with a -e argument
    setEnvironment('CHEMCENTRAL_DB_PORT', '5432')
    setEnvironment("CHEMAXON_LICENSE_URL", "/external/license.cxl")
    
    runCommand("rm -rf /usr/local/tomcat/webapps/*")
    
    def warFile = tasks.war.outputs.files.singleFile
    addFile(warFile, "/usr/local/tomcat/webapps/${contextName}.war")
    
    exposePort(8080)
}



