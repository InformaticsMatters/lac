apply plugin: 'groovy'

apply plugin: 'docker'

apply plugin: 'application'
mainClassName = "com.im.lac.jobs.impl.Main"
applicationDefaultJvmArgs = ["-Xmx1200m"]

buildscript {
    repositories { 
        jcenter() 
        //mavenCentral()
    }
    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}


repositories {
    jcenter()
}

dependencies {
    
    
    compile project(':common')
    compile project(':chemaxon-lib')
    
    compile "org.apache.camel:camel-core:$camelVersion"
    compile "org.apache.camel:camel-jetty:$camelVersion"
    compile "org.apache.camel:camel-jackson:$camelVersion"
    compile "org.apache.camel:camel-http4:$camelVersion"
    compile "org.apache.camel:camel-jms:$camelVersion"
    compile "org.apache.camel:camel-swagger:$camelVersion"

    compile "org.apache.activemq:activemq-camel:5.6.0"
    
    compile "org.postgresql:postgresql:9.4-1201-jdbc41"

    // We use the awesome Spock testing and specification framework
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
    testCompile 'junit:junit:4.11'
}


docker {
    baseImage "java:openjdk-8-jdk"
    maintainer 'Tim Dudgeon'
}

/** Build a Docker image
 * run the generated image with something like this:
 * docker run -d --name jobservices -p 80:8000 --link <name_of_postgres_db_image>:db -v <host_dir>:/external <image_id>
 * 
 * Note: the host directory <host_dir> containing the ChemAxon license file needs to be specified,
// * or some other mechanism used, probably by setting the value of the CHEMAXON_LICENSE_URL
 * environment variable using an -e option.
 * The following environment variables can be used to override the default settings:
 * CHEMCENTRAL_DB_SERVER, CHEMCENTRAL_DB_PORT, CHEMCENTRAL_DB_USERNAME, CHEMCENTRAL_DB_PASSWORD, CHEMAXON_LICENSE_URL
 */
task buildDocker(type: Docker, dependsOn: distZip) {
    applicationName = "jobservices"
    runCommand("apt-get update")
    def zipFile = tasks.distZip.outputs.files.singleFile
    addFile(zipFile, '/data/' + zipFile.name)
    workingDir('/data')
    runCommand("unzip /data/" + zipFile.name)

    setEnvironment("CHEMCENTRAL_DB_SERVER", "db") // assumes the db alias is used when linking. If not override with a -e argument
    setEnvironment('CHEMCENTRAL_DB_PORT', '5432')
    setEnvironment("CHEMAXON_LICENSE_URL", "/external/license.cxl")
    
    exposePort(8000) // do we need to configure the port?
    entryPoint(["/data/${project.name}-${version}/bin/${project.name}"])
}
