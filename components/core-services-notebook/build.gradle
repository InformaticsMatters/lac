description = 'notebook execution'
def contextName = 'notebook'

apply plugin: 'groovy'
apply plugin: 'war'
apply plugin: 'com.bmuschko.docker-remote-api'

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:2.4.1'
        
    }
}

dependencies {
   
    compile project(':common')
    compile project(':common-utils')
    compile project(':common-camel')
    compile project(':core-services-common')
    compile project(':core-services-client')
    compile project(':core-services-exec')
    
    compile "org.codehaus.groovy:groovy-all:$groovyVersion"
    
    compile 'org.apache.httpcomponents:httpclient:4.5'

    compile 'com.sun.jersey:jersey-client:1.19'
    compile 'com.sun.jersey:jersey-server:1.19'
    compile 'com.sun.jersey:jersey-servlet:1.19'
    compile 'com.sun.jersey:jersey-json:1.19'
    
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$jacksonVersion"
    
    providedCompile 'javax.servlet:javax.servlet-api:3.0.1'
    
    compile 'org.jboss.weld.servlet:weld-servlet:2.2.9.Final'
    
}

docker {
    url = (System.getenv('DOCKER_HOST') ?  System.getenv('DOCKER_HOST').replace('tcp://', 'http://') : 'http://localhost:2375')
    println "Using Docker host of $url"
    //certPath = new File(System.properties['user.home'], '.docker')
    certPath = null
}

task dockerFile(type: Dockerfile, dependsOn: war) {
    
    destFile = project.file('build/Dockerfile')
    from "tomcat:8-jre8"
    maintainer 'Tim Dudgeon <tdudgeon@informaticsmatters.com>'
    
    runCommand("rm -rf /usr/local/tomcat/webapps/*")
    runCommand("echo JAVA_OPTS=\'-Dcom.sun.jersey.server.impl.cdi.lookupExtensionInBeanManager=true\' > /usr/local/tomcat/bin/setenv.sh")
    
    def warFile = tasks.war.outputs.files.singleFile
    addFile('libs/' + warFile.name, "/usr/local/tomcat/webapps/${contextName}.war")
    
    exposePort(8080)
}

task dockerImage(type: DockerBuildImage) {
    dependsOn war, dockerFile
    inputDir = dockerFile.destFile.parentFile
    tag = "squonk/" + contextName
}
