description = 'LAC tools for life sciences'

apply plugin: 'com.bmuschko.docker-remote-api'

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.2'
        classpath 'com.bmuschko:gradle-docker-plugin:2.4.1'
    }
}

allprojects {
    
    group = 'im.lac.components'
    
    apply plugin: 'groovy' // Apply the groovy plugin (also adds support for Java)
    apply plugin: 'maven'  // Maven repo stuff

    sourceCompatibility = 1.8
    version = '0.2-SNAPSHOT'
    
    project.ext.set('camelVersion', '2.15.2')
    // look at the jackson2-version property here to get the right Jackson version
    // https://github.com/apache/camel/blob/master/parent/pom.xml
    // note: version used by camel is 2.4.3 - trying later version to use "Attributes"
    project.ext.set('jacksonVersion', '2.6.1')
    project.ext.set('cdkVersion', '1.5.10')
    project.ext.set('groovyVersion', '2.4.3')


    // In this section you declare where to find the dependencies of your project
    repositories {
        // Use 'jcenter' for resolving your dependencies.
        // You can declare any Maven/Ivy/file repository here.
        jcenter()
        
        maven {
            credentials {
                // define username and password as environment variables 
                username System.getenv('CHEMAXON_REPO_USERNAME') ?: 'tdudgeon'
                password System.getenv('CHEMAXON_REPO_PASSWORD') ?: 'tdudgeon'
            }
            url "https://repository.chemaxon.com/artifactory/libs-release"
        }
    }

    // In this section you declare the dependencies for your production and test code
    dependencies {
        compile 'org.slf4j:slf4j-simple:1.7.7'

        // Spock for unit testing
        testCompile "org.codehaus.groovy:groovy-all:$groovyVersion"
        testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
    }
}

// all subprojects are assumed to have artifacts to send to maven repo
subprojects {
    uploadArchives {
        repositories {
            mavenDeployer {
                // hard coded URL as Jenkins puts things to there.
                // If you want to run this locally then make sure that directory exists. 
                repository(url: "file:///var/maven_repo/")
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
    jarFile = 'wrapper/wrapper.jar'
}

task integrationTestEnvPrepare(type:Exec) {
    dependsOn "core-services/core-services-server:dockerFile"
    
    workingDir '../docker'
    commandLine 'bash', 'int-test-env-prepare.sh'
}

task integrationTestEnvPrepareAndClean(type:Exec) {
    dependsOn integrationTestEnvPrepare
    //sleep 1000
    commandLine 'bash', '../docker/int-test-env-clean.sh'
}

task integrationTestEnvShutdown(type:Exec) { 
    workingDir '../docker'
    commandLine 'bash', 'int-test-env-shutdown.sh'
}

task integrationTestEnvClean(type:Exec) { 
    commandLine 'bash', '../docker/int-test-env-clean.sh'
    
}


task dbTestEnvPrepare(type:Exec) {
    dependsOn "core-services/core-services-server:dockerFile"
    workingDir '../docker'
    commandLine 'bash', 'db-test-env-prepare.sh'
}

task dbTestEnvShutdown(type:Exec) {    
    dependsOn "core-services/core-services-server:dockerFile"
    workingDir '../docker'
    commandLine 'bash', 'db-test-env-shutdown.sh'
}

task createEbsBackendServicesRootZip(type: Zip) {
    
    copy {
        from '../data/licenses/license.cxl'
        into 'chem-services-root/src/main/html/licenses'
    }
    
    archiveName = 'ROOT.war'
    destinationDir = file('build/ebs/')
    from 'chem-services-root/src/main/html'
}

task createEbsBackendServicesZip(type: Zip) {
    
    dependsOn = [
        createEbsBackendServicesRootZip, 
       'chem-services-cdk-basic:war',
       'chem-services-chemaxon-basic:war',
       'chem-services-rdkit-basic:war'
    ]
    archiveName = 'ebs.zip'
    destinationDir = file('build/ebs/')
    from files(
        'chem-services-cdk-basic/build/libs/chem-services-cdk-basic-' + version + '.war',
        'chem-services-chemaxon-basic/build/libs/chem-services-chemaxon-basic-' + version + '.war',
        'chem-services-rdkit-basic/build/libs/chem-services-rdkit-basic-' + version + '.war',
        'build/ebs/ROOT.war',
    
    )
    rename { String fileName ->
        fileName.replace('-' + version, '')
    }
        
}


docker {
    url = 'http://' + (System.getenv('DOCKER_IP') ?: 'localhost') + ':2375'
    //certPath = new File(System.properties['user.home'], '.docker')
    certPath = null
}

task dockerFileChemServices(type: Dockerfile) {
    
    dependsOn = [
        tasks.getByPath(':chem-services-cdk-basic:war'),
        tasks.getByPath(':chem-services-chemaxon-basic:war'),
        tasks.getByPath(':chem-services-rdkit-basic:war')
    ]
    
    copy{
        from "../data/licenses/license.cxl"
        from ("chem-services-cdk-basic/build/libs") {
            include '*.war'
            rename '.*', 'chem-services-cdk-basic.war'
        }
        from ("chem-services-chemaxon-basic/build/libs") {
            include '*.war'
            rename '.*', 'chem-services-chemaxon-basic.war'
        }
        from ("chem-services-rdkit-basic/build/libs") {
            include '*.war'
            rename '.*', 'chem-services-rdkit-basic.war'
        }
        into 'build/chem-services-basic'
    }
    
    
    destFile = project.file('build/chem-services-basic/Dockerfile')
    from "informaticsmatters/rdkit_java_tomcat"
    maintainer 'Tim Dudgeon <tdudgeon@informaticsmatters.com>'
    
    runCommand("rm -rf /usr/local/tomcat/webapps/*")
    
    addFile('*.war', "/usr/local/tomcat/webapps/")
    addFile('license.cxl', 'license.cxl')
    environmentVariable("CHEMAXON_LICENSE_URL", "/usr/local/tomcat/license.cxl")
    
    exposePort(8080)
}

task dockerImageChemServices(type: DockerBuildImage) {
    dependsOn dockerFileChemServices
    inputDir = dockerFileChemServices.destFile.parentFile
    tag = "squonk/chem-services-basic"
}