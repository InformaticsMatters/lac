group = 'im.lac'
description = 'Chemcentral services'

apply plugin: 'jetty'
jettyRun {
    reload = "automatic"
    scanIntervalSeconds = 1
}
sourceCompatibility = 1.7

apply plugin: 'docker'
//apply plugin: 'com.bmuschko.docker-remote-api'

buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
        //classpath 'com.bmuschko:gradle-docker-plugin:0.7.2'
    }
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    
    compile "org.postgresql:postgresql:9.3-1102-jdbc4"
    
    //compile "org.slf4j:slf4j-simple:1.7.7"
    
    compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'
    compile 'org.glassfish.jersey.core:jersey-server:2.6'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.6'

    
    compile("com.chemaxon:jchem:6.3.4") {
        // probably other things should be excluded too - jchem is not at all modular
        exclude group:'chemaxonlib',module:'batik-core'
        exclude group:'chemaxonlib',module:'dom4j'
        exclude group:'chemaxonlib',module:'xercesImpl'
        exclude group:'chemaxonlib',module:'castor-core'
        exclude group:'chemaxonlib',module:'castor-xml'
        exclude group:'chemaxonlib',module:'runtime12'
        exclude group:'chemaxonlib',module:'classes12'
        exclude group:'chemaxonlib',module:'macosx-application-bundle'
        exclude group:'chemaxonlib',module:'OSXPasteBoardWrapper'
        exclude group:'chemaxonlib',module:'tesseract-data'
        exclude group:'chemaxonlib',module:'tesseract-windows'
        exclude group:'chemaxonlib',module:'tesseract-linux-x32'
        exclude group:'chemaxonlib',module:'tesseract-linux-x64'
        exclude group:'chemaxonlib',module:'tesseract-macosx'
        exclude group:'chemaxonlib',module:'gluegen-rt-natives-linux-amd64'
        exclude group:'chemaxonlib',module:'gluegen-rt-natives-linux-i586'
        exclude group:'chemaxonlib',module:'gluegen-rt-natives-macosx-universal'
        exclude group:'chemaxonlib',module:'gluegen-rt-natives-solaris-amd64'
        exclude group:'chemaxonlib',module:'gluegen-rt-natives-solaris-i586'
        exclude group:'chemaxonlib',module:'gluegen-rt-natives-windows-amd64'
        exclude group:'chemaxonlib',module:'gluegen-rt-natives-windows-i586'
        exclude group:'chemaxonlib',module:'gluegen-rt'
        exclude group:'chemaxonlib',module:'jogl-all-natives-linux-amd64'
        exclude group:'chemaxonlib',module:'jogl-all-natives-linux-i586'
        exclude group:'chemaxonlib',module:'jogl-all-natives-macosx-universal'
        exclude group:'chemaxonlib',module:'jogl-all-natives-solaris-amd64'
        exclude group:'chemaxonlib',module:'jogl-all-natives-solaris-i586'
        exclude group:'chemaxonlib',module:'jogl-all-natives-windows-amd64'
        exclude group:'chemaxonlib',module:'jogl-all-natives-windows-i586'
        exclude group:'chemaxonlib',module:'jogl-all'

        exclude group:'org.postgresql',module:'postgresql'
        exclude group:'org.apache.derby',module:'derby'
        exclude group:'org.apache.derby',module:'derbyclient'
        exclude group:'org.apache.derby',module:'derbynet'
        exclude group:'org.apache.derby',module:'derbyrun'
        exclude group:'org.apache.derby',module:'derbytools'
        exclude group:'org.apache.derby',module:'derbyLocale_cs'
        exclude group:'org.apache.derby',module:'derbyLocale_de_DE'
        exclude group:'org.apache.derby',module:'derbyLocale_es'
        exclude group:'org.apache.derby',module:'derbyLocale_fr'
        exclude group:'org.apache.derby',module:'derbyLocale_hu'
        exclude group:'org.apache.derby',module:'derbyLocale_it'
        exclude group:'org.apache.derby',module:'derbyLocale_ja_JP'
        exclude group:'org.apache.derby',module:'derbyLocale_ko_KR'
        exclude group:'org.apache.derby',module:'derbyLocale_pl'
        exclude group:'org.apache.derby',module:'derbyLocale_pt_BR'
        exclude group:'org.apache.derby',module:'derbyLocale_ru'
        exclude group:'org.apache.derby',module:'derbyLocale_zh_CN'
        exclude group:'org.apache.derby',module:'derbyLocale_zh_TW'
        exclude group:'mysql',module:'mysql-connector-java'
        //exclude group:'com.oracle',module:'ojdbc6' // needed in JChem 6.3.4
        exclude group:'org.hsqldb',module:'hsqldb'
        exclude group:'net.sf.jacob-project',module:'jacob-native-x86'
        exclude group:'net.sf.jacob-project',module:'jacob-native-x64'
        exclude group:'net.sf.jacob-project',module:'jacob'
        exclude group:'com.lowagie',module:'itext'
        exclude group:'com.lowagie',module:'itext-rtf'
        exclude group:'gov.nih.nci.cactus',module:'osra-linux-x64'
        exclude group:'org.swinglabs',module:'swingx'
    }
}

httpPort = 8888
stopPort = 9451
stopKey = 'lac'

docker {
    baseImage "consol/jetty-7"
    maintainer 'Tim Dudgeon'
}

/* Build a docker image.
 * 
 * To run it linking to a postgres db also running in docker do something like this:
 * ./gradlew chemcentral:dockerBuild
 * docker run -d -P --link pg_db:db -name chemcentral <image-id-from-docker-build>
 * (where pg_db is the name of the postgres docker instance)
 * 
 * If running against postgres outside of docker then omit the "--link pg_db:db" bit
 * and instead provide the necessary environment variables using the -e "name=value" 
 * syntax (can be specified multiple times to specifing the following variables:
 * CHEMCENTRAL_DB_SERVER CHEMCENTRAL_DB_PORT CHEMCENTRAL_DB_USERNAME CHEMCENTRAL_DB_PASSWORD
*/
task dockerBuild(type: Docker, dependsOn: war) {
    applicationName = "chemcentral"
    setEnvironment('CHEMCENTRAL_DB_SERVER', 'db') // assumes the db alias is used when linking. If not override with a -e argument
    setEnvironment('CHEMCENTRAL_DB_PORT', '5432')
    addFile(tasks.war.outputs.files.singleFile)
    // TODO add chemaxon license file
    runCommand 'mkdir /maven'
    runCommand "mv /${tasks.war.outputs.files.singleFile.name} /maven/chemcentral.war"
    
    addFile {
        from 'build/libs/chemcentral-0.1-SNAPSHOT.war'
        into '/maven'
        rename '.+', 'chemcentral.war'
    }
}

//import com.bmuschko.gradle.docker.tasks.DockerVersion
//import com.bmuschko.gradle.docker.tasks.DockerInfo
//docker {
//    serverUrl = 'unix:///var/run/docker.sock'
//}
//
//task dockerVersion(type: DockerVersion)
//task dockerInfo(type: DockerInfo)

